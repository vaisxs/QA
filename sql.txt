Найдите номер модели, скорость и размер жесткого диска для всех ПК стоимостью менее 500 дол. Вывести: model, speed и hd:

SELECT DISTINCT model, speed, hd
FROM PC
WHERE price < 500;


========


Найдите производителей принтеров. Вывести: maker:

SELECT DISTINCT maker FROM Product
WHERE type = 'printer';


=======


Найдите номер модели, объем памяти и размеры экранов ПК-блокнотов, цена которых превышает 1000 дол.:

SELECT DISTINCT model, ram, screen
FROM Laptop
WHERE price > 1000;


========



Найдите все записи таблицы Printer для цветных принтеров:

SELECT * FROM Printer
WHERE color= 'y'
ORDER BY color;


=======


Найдите номер модели, скорость и размер жесткого диска ПК, имеющих 12x или 24x CD и цену менее 600 дол.:

SElECT model, speed, hd
FROM PC
WHERE ( cd = '12x' or cd = '24x') AND price < 600;


=======


Для каждого производителя, выпускающего ПК-блокноты c объёмом жесткого диска не менее 10 Гбайт, найти скорости таких ПК-блокнотов. Вывод: производитель, скорость:

SELECT DISTINCT Product.maker, Laptop.speed
FROM Product INNER JOIN Laptop
ON Product.model=Laptop.model
WHERE hd >= 10;


=======


Найдите среднюю скорость ПК:

SELECT AVG(speed) 
FROM PC;


=======


Найдите среднюю скорость ПК-блокнотов, цена которых превышает 1000 дол:

SELECT AVG(SPEED) 
FROM Laptop
WHERE price > 1000;


=======


Найдите производителя, выпускающего ПК, но не ПК-блокноты:

SELECT maker FROM Product
WHERE type='PC'
EXCEPT
SELECT maker FROM  Product 
WHERE type='Laptop';


=======


Найдите среднюю скорость ПК, выпущенных производителем A:

SELECT AVG(speed) 
FROM PC JOIN Product 
ON Product.model=PC.model
WHERE maker ='A'
ORDER BY AVG(speed);


=======


Найдите производителей ПК с процессором не менее 450 Мгц. Вывести: Maker:

SELECT DISTINCT maker FROM Product
JOIN PC ON Product.model=PC.model
WHERE speed >= 450;


=======


Выведите идентификаторы товаров (поле good) из таблицы Payments, стоимость которых больше 2000 единиц. Стоимость товара хранится в поле unit_price.

SELECT good FROM Payments
WHERE unit_price > 2000;


========


Выведите имена (поле member_name) членов семьи из таблицы FamilyMembers, чей статус (поле status) равен "father".

SELECT member_name FROM FamilyMembers
WHERE status = "father";


========


Выведите имя (поле member_name) и дату рождения (поле birthday) членов семьи из таблицы FamilyMembers, чей статус (поле status) равен "father" или "mother".

SELECT member_name, birthday FROM FamilyMembers
WHERE status ="father" OR status = "mother";


========


Выведите резервации комнат (поля room_id, start_date, end_date) из таблицы Reservations, у которых итоговая стоимость аренды (поле total) находится в промежутке от 500 до 1200 включительно.

SELECT room_id, start_date, end_date FROM Reservations
WHERE total BETWEEN 500 AND 1200;


========


Объедините таблицы Class и Student_in_class с помощью внутреннего соединения по полям Class.id и Student_in_class.class. Выведите название класса (поле Class.name) и идентификатор ученика (поле Student_in_class.student).

SELECT Class.name, Student_in_class.student FROM Class
JOIN Student_in_class ON Class.id = Student_in_class.class;


========


Дополните запрос из предыдущего задания, добавив ещё одно внутреннее соединение с таблицей Student. Объедините по полям Student_in_class.student и Student.id и вместо идентификатора ученика выведите его имя (поле first_name).

SELECT Class.name, first_name FROM Class 
JOIN Student_in_class ON Class.id = Student_in_class.class
JOIN Student ON Student_in_class.student = Student.id;


========


Посчитать количество экземпляров книг каждого автора из таблицы author. Вывести тех авторов, количество книг которых меньше 10, в отсортированном по возростанию количества виде.
 Последний столбец назвать 'Количество'.

SELECT name_author, SUM(amount) as Количество 
FROM author LEFT JOIN  book 
ON author.author_id = book.author_id
GROUP BY name_author
HAVING  Количество < 10 OR COUNT(title) = 0
ORDER BY Количество ASC; 

========

 Если в таблицах supply  и book есть одинаковые книги, которые имеют равную цену,  вывести их название и автора, а также посчитать общее количество экземпляров книг в таблицах supply и book,  столбцы назвать Название, Автор  и Количество.

SELECT book.title as Название, name_author as Автор, supply.amount + book.amount as Количество 
FROM book INNER JOIN supply using (price) 
INNER JOIN author on author.name_author = supply.author and supply.title = book.title;

=======

Вывести номера всех оплаченных заказов и даты, когда они были оплачены.

select buy_id, date_step_end 
from buy_step
join step on buy_step.step_id = step.step_id
where buy_step.step_id = 1 and buy_step.date_step_end is not null; 

=======

Создать новый заказ для Попова Ильи. Его комментарий для заказа: «Связаться со мной по вопросу доставки».
Важно! В решении нельзя использоваться VALUES и делать отбор по client_id.

insert into buy (buy_id, buy_description, client_id) 
select buy_id, 'Связаться со мной по вопросу доставки', client_id
from buy right join client using(client_id)
WHERE client.name_client = 'Попов Илья';

select * from buy;

========

Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.

select name_genre, title, name_author
from author inner join book on author.author_id = book.author_id 
inner join genre on genre.genre_id = book.genre_id
where name_genre = 'Роман'
order by title asc;


